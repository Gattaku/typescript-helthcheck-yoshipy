(()=>{"use strict";class e{get totalscore(){return s.getInstance().activeElementsScore.reduce(((e,t)=>e+t),0)}render(){document.querySelector(".score__number").textContent=String(this.totalscore)}constructor(){}static getInstance(){return e.instance||(e.instance=new e),e.instance}}class t{constructor(e){this.element=e,e.addEventListener("click",this.clickEventHnadler.bind(this))}clickEventHnadler(){this.element.classList.toggle("food--active"),e.getInstance().render()}}class s{get activeElements(){return this._activeElements=[],this.elements.forEach((e=>{e.classList.contains("food--active")&&this._activeElements.push(e)})),this._activeElements}get activeElementsScore(){return this._activeElementsScore=[],this.activeElements.forEach((e=>{const t=e.querySelector(".food__score");t&&this._activeElementsScore.push(Number(t.textContent))})),this._activeElementsScore}constructor(){this.elements=document.querySelectorAll(".food"),this._activeElements=[],this._activeElementsScore=[],this.elements.forEach((e=>{new t(e)}))}static getInstance(){return s.instance||(s.instance=new s),s.instance}}s.getInstance()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFDTyxNQUFNQSxFQUNMQyxpQkFFQSxPQURjQyxFQUFNQyxjQUNQQyxvQkFBb0JDLFFBQU8sQ0FBQ0MsRUFBT0MsSUFBVUQsRUFBUUMsR0FBTyxFQUM3RSxDQUNBQyxTQUNJQyxTQUFTQyxjQUFjLGtCQUFrQkMsWUFBY0MsT0FBT0MsS0FBS1osV0FDdkUsQ0FDQWEsY0FBZ0IsQ0FDaEJDLHFCQUlJLE9BSEtmLEVBQU1nQixXQUNQaEIsRUFBTWdCLFNBQVcsSUFBSWhCLEdBRWxCQSxFQUFNZ0IsUUFDakIsRUNkRyxNQUFNQyxFQUNUSCxZQUFZSSxHQUNSTCxLQUFLSyxRQUFVQSxFQUNmQSxFQUFRQyxpQkFBaUIsUUFBU04sS0FBS08sa0JBQWtCQyxLQUFLUixNQUNsRSxDQUNBTyxvQkFDSVAsS0FBS0ssUUFBUUksVUFBVUMsT0FBTyxnQkFDaEJ2QixFQUFNRyxjQUNkSyxRQUNWLEVDVEcsTUFBTU4sRUFDTHNCLHFCQU9BLE9BTkFYLEtBQUtZLGdCQUFrQixHQUN2QlosS0FBS2EsU0FBU0MsU0FBUVQsSUFDZEEsRUFBUUksVUFBVU0sU0FBUyxpQkFDM0JmLEtBQUtZLGdCQUFnQkksS0FBS1gsRUFDOUIsSUFFR0wsS0FBS1ksZUFDaEIsQ0FDSXJCLDBCQVFBLE9BUEFTLEtBQUtpQixxQkFBdUIsR0FDNUJqQixLQUFLVyxlQUFlRyxTQUFRVCxJQUN4QixNQUFNYSxFQUFZYixFQUFRUixjQUFjLGdCQUNwQ3FCLEdBQ0FsQixLQUFLaUIscUJBQXFCRCxLQUFLRyxPQUFPRCxFQUFVcEIsYUFDcEQsSUFFR0UsS0FBS2lCLG9CQUNoQixDQUNBaEIsY0FDSUQsS0FBS2EsU0FBV2pCLFNBQVN3QixpQkFBaUIsU0FDMUNwQixLQUFLWSxnQkFBa0IsR0FDdkJaLEtBQUtpQixxQkFBdUIsR0FDNUJqQixLQUFLYSxTQUFTQyxTQUFRVCxJQUNsQixJQUFJRCxFQUFLQyxFQUFRLEdBRXpCLENBQ0FILHFCQUlJLE9BSEtiLEVBQU1jLFdBQ1BkLEVBQU1jLFNBQVcsSUFBSWQsR0FFbEJBLEVBQU1jLFFBQ2pCLEVDakNKZCxFQUFNQyxhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VjdGlvbjktc2V0dXAvLi9kaXN0L3Njb3JlLmpzIiwid2VicGFjazovL3NlY3Rpb245LXNldHVwLy4vZGlzdC9mb29kLmpzIiwid2VicGFjazovL3NlY3Rpb245LXNldHVwLy4vZGlzdC9mb29kcy5qcyIsIndlYnBhY2s6Ly9zZWN0aW9uOS1zZXR1cC8uL2Rpc3QvbWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb29kcyB9IGZyb20gXCIuL2Zvb2RzLmpzXCI7XG5leHBvcnQgY2xhc3MgU2NvcmUge1xuICAgIGdldCB0b3RhbHNjb3JlKCkge1xuICAgICAgICBjb25zdCBmb29kcyA9IEZvb2RzLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHJldHVybiBmb29kcy5hY3RpdmVFbGVtZW50c1Njb3JlLnJlZHVjZSgodG90YWwsIHNjb3JlKSA9PiB0b3RhbCArIHNjb3JlLCAwKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNjb3JlX19udW1iZXJcIikudGV4dENvbnRlbnQgPSBTdHJpbmcodGhpcy50b3RhbHNjb3JlKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoKSB7IH1cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghU2NvcmUuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIFNjb3JlLmluc3RhbmNlID0gbmV3IFNjb3JlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNjb3JlLmluc3RhbmNlO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IFNjb3JlIH0gZnJvbSBcIi4vc2NvcmUuanNcIjtcbmV4cG9ydCBjbGFzcyBGb29kIHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xpY2tFdmVudEhuYWRsZXIuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIGNsaWNrRXZlbnRIbmFkbGVyKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZShcImZvb2QtLWFjdGl2ZVwiKTtcbiAgICAgICAgY29uc3Qgc2NvcmUgPSBTY29yZS5nZXRJbnN0YW5jZSgpO1xuICAgICAgICBzY29yZS5yZW5kZXIoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBGb29kIH0gZnJvbSBcIi4vZm9vZC5qc1wiO1xuZXhwb3J0IGNsYXNzIEZvb2RzIHtcbiAgICBnZXQgYWN0aXZlRWxlbWVudHMoKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhcImZvb2QtLWFjdGl2ZVwiKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzLnB1c2goZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRWxlbWVudHM7XG4gICAgfVxuICAgIGdldCBhY3RpdmVFbGVtZW50c1Njb3JlKCkge1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlID0gW107XG4gICAgICAgIHRoaXMuYWN0aXZlRWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZvb2RTY29yZSA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb29kX19zY29yZVwiKTtcbiAgICAgICAgICAgIGlmIChmb29kU2NvcmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlLnB1c2goTnVtYmVyKGZvb2RTY29yZS50ZXh0Q29udGVudCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FjdGl2ZUVsZW1lbnRzU2NvcmU7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5mb29kXCIpO1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50cyA9IFtdO1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIG5ldyBGb29kKGVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgICAgICBpZiAoIUZvb2RzLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBGb29kcy5pbnN0YW5jZSA9IG5ldyBGb29kcygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBGb29kcy5pbnN0YW5jZTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBGb29kcyB9IGZyb20gXCIuL2Zvb2RzXCI7XG5Gb29kcy5nZXRJbnN0YW5jZSgpO1xuIl0sIm5hbWVzIjpbIlNjb3JlIiwidG90YWxzY29yZSIsIkZvb2RzIiwiZ2V0SW5zdGFuY2UiLCJhY3RpdmVFbGVtZW50c1Njb3JlIiwicmVkdWNlIiwidG90YWwiLCJzY29yZSIsInJlbmRlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwiU3RyaW5nIiwidGhpcyIsImNvbnN0cnVjdG9yIiwic3RhdGljIiwiaW5zdGFuY2UiLCJGb29kIiwiZWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGlja0V2ZW50SG5hZGxlciIsImJpbmQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJhY3RpdmVFbGVtZW50cyIsIl9hY3RpdmVFbGVtZW50cyIsImVsZW1lbnRzIiwiZm9yRWFjaCIsImNvbnRhaW5zIiwicHVzaCIsIl9hY3RpdmVFbGVtZW50c1Njb3JlIiwiZm9vZFNjb3JlIiwiTnVtYmVyIiwicXVlcnlTZWxlY3RvckFsbCJdLCJzb3VyY2VSb290IjoiIn0=